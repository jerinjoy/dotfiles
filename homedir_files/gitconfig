# SPDX-FileCopyrightText: 2023 Jerin Joy
#
# SPDX-License-Identifier: Apache-2.0

# References:
# https://jvns.ca/blog/2024/02/16/popular-git-config-options/#rerere-enabled-true

[include]
    # Place user-specific configuration (name, email) in ~/.user.gitconfig
    # This file is not tracked by git, so it won't be shared with others
    path = ~/user.gitconfig

[alias]
    glog = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'

    # list of the the recent 10 branches that I've worked on
    recent = for-each-ref --count=10 --sort=-committerdate refs/heads/ --format="%(refname:short)"

    fcommit = commit --no-verify

    # Runs pre-commit hooks and adds the modified files before committing.
    # It will only add the files that have changed with the pre-commit hooks.
    scommit = "!f() { \
        STAGED_FILES=$(git diff --cached --name-only); \
        if [ -z \"$STAGED_FILES\" ]; then echo 'No staged files to commit.'; exit 1; fi; \
        echo \"Running pre-commit on: $STAGED_FILES\"; \
        pre-commit run --files $STAGED_FILES || true; \
        for file in $STAGED_FILES; do \
        if [ -f \"$file\" ]; then git add \"$file\"; fi; \
        done; \
        git commit -s \"$@\"; \
    }; f"

    amend = commit --amend
    unstage = reset HEAD --
    fixup = commit --fixup
    squash = "!f() { git reset --soft HEAD~${1:-1} && git commit --edit -m \"squash\"; }; f"

[core]
    excludesfile = ~/.gitignore_global
    pager = delta
    editor = vim

[interactive]
    diffFilter = delta --color-only
[add.interactive]
    useBuiltin = false # required for git 2.37.0

[delta]
    navigate = true    # use n and N to move between diff sections
    light = false      # set to true if you're in a terminal w/ a light background color (e.g. the default macOS terminal)
    side-by-side = true
    # To disable the line numbers in side-by-side view, but keep a vertical delimiter line between the left and right panels
#    line-numbers-left-format = ""
#    line-numbers-right-format = "│ "
    # Tokyo at night colorscheme
    # https://github.com/folke/tokyonight.nvim/tree/main/extras/delta
    minus-style                   = syntax "#37222c"
    minus-non-emph-style          = syntax "#37222c"
    minus-emph-style              = syntax "#713137"
    minus-empty-line-marker-style = syntax "#37222c"
    line-numbers-minus-style      = "#b2555b"
    plus-style                    = syntax "#20303b"
    plus-non-emph-style           = syntax "#20303b"
    plus-emph-style               = syntax "#2c5a66"
    plus-empty-line-marker-style  = syntax "#20303b"
    line-numbers-plus-style       = "#266d6a"
    line-numbers-zero-style       = "#3b4261"

[merge]
    conflictstyle = zdiff3

[diff]
    colorMoved = default
	submodule = log

[commit]
	template = ~/.stCommitMsg
[color]
	ui = auto

[rebase]
    autosquash = true

[push]
    # https://jvns.ca/blog/2024/02/16/popular-git-config-options/#push-default-simple-push-default-current
	autoSetupRemote = true
    default = current

[rerere]
    # This enables rerere (”reuse recovered resolution”), which remembers
    # how you resolved merge conflicts during a git rebase and automatically
    # resolves conflicts for you when it can.
    enabled = true

[help]
    # If you want it to run the autocorrect suggestion automatically,
    # you can set help.autocorrect to 1 (run after 0.1 seconds),
    # 10 (run after 1 second), immediate (run immediately),
    # or prompt (run after prompting)
    autocorrect = 10

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[transfer]
	fsckobjects = true
[fetch]
	fsckobjects = true
	prune = true
[receive]
	fsckObjects = true
[status]
	submoduleSummary = true
[submodule]
	recurse = true
[branch]
	sort = -committerdate
